let k :: int -> int -> int = fun k(p) :: int -> int -> int = fun k_(q) :: int -> int = p in let k1 :: int -> int -> int = fun k1(p) :: int -> int -> int = fun k1_(q) :: int -> int = q in let i :: int -> int = fun i(x) :: int -> int = x in let f_true :: int -> int -> int = k in let f_false :: int -> int -> int = k1 in let iF :: (int -> int -> int) -> int -> int -> int = fun iF(p) :: (int -> int -> int) -> int -> int -> int = fun p_(m) :: int -> int -> int = fun p__(n) :: int -> int = p m n in let elsE :: int -> int = i in let theN :: int -> int = i in let a :: int -> int -> int = f_true in let b :: int -> int -> int = f_false in iF (a) (theN 7) (elsE 8)